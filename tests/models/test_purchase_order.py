import pytest
from mock import MagicMock, patch

from models.PurchaseOrder import PurchaseOrder


class TestPurchaseOrder:
    """ Test Suite for Purchase Order model """

    def setup_method(self):
        self.mock_purchase_order = PurchaseOrder()

    def test_set_get_purchase_order_id(self):
        """ Test Success: Purchase order id set and get """
        fake_purchase_order_id = 'po1'
        self.mock_purchase_order.set_purchase_order_id(fake_purchase_order_id)
        sut = self.mock_purchase_order.get_purchase_order_id()
        assert sut == fake_purchase_order_id

    def test_get_purchase_order_id_returns_none_if_not_set(self):
        """ Test Failure: None returned if purchase order id not set """
        fake_purchae_order = PurchaseOrder()
        sut = fake_purchae_order.get_purchase_order_id()
        assert sut == None

    def test_set_get_generated_by(self):
        """ Test Success: Generated by set and get """
        fake_generated_by = 'user1'
        self.mock_purchase_order.set_generated_by(fake_generated_by)
        sut = self.mock_purchase_order.get_generated_by()
        assert sut == fake_generated_by

    def test_set_get_generated_date(self):
        """ Test Success: Generated date set and get """
        fake_date = '11/02/2020'
        self.mock_purchase_order.set_generated_date(fake_date)
        sut = self.mock_purchase_order.get_generated_date()
        assert sut == fake_date

    def test_set_get_completion_date(self):
        """ Test Success: Completion date set and get """
        fake_date = '14/02/2020'
        self.mock_purchase_order.set_completion_date(fake_date)
        sut = self.mock_purchase_order.get_completion_date()
        assert sut == fake_date

    # def test_create_purchase_order_creates_purchase_order(self):
        